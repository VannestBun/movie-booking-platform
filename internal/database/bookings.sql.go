// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: bookings.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createBooking = `-- name: CreateBooking :one
INSERT INTO bookings (
  id, 
  user_id, 
  movie_id, 
  seat_number, 
  booking_time, 
  created_at, 
  updated_at
) VALUES (
  gen_random_uuid(), 
  $1, 
  $2, 
  $3, 
  $4, 
  NOW(), 
  NOW()
)
RETURNING id, user_id, movie_id, booking_time, seat_number, created_at, updated_at
`

type CreateBookingParams struct {
	UserID      uuid.UUID
	MovieID     uuid.UUID
	SeatNumber  string
	BookingTime time.Time
}

func (q *Queries) CreateBooking(ctx context.Context, arg CreateBookingParams) (Booking, error) {
	row := q.db.QueryRowContext(ctx, createBooking,
		arg.UserID,
		arg.MovieID,
		arg.SeatNumber,
		arg.BookingTime,
	)
	var i Booking
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.MovieID,
		&i.BookingTime,
		&i.SeatNumber,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
